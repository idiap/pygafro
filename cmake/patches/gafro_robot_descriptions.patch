#
# SPDX-FileCopyrightText: Copyright Â© 2025 Idiap Research Institute <contact@idiap.ch>
#
# SPDX-FileContributor: Philip Abbet <philip.abbet@idiap.ch>
#
# SPDX-License-Identifier: MPL-2.0
#
diff --git i/CMakeLists.txt w/CMakeLists.txt
deleted file mode 100644
index 92237ba..0000000
--- i/CMakeLists.txt
+++ /dev/null
@@ -1,101 +0,0 @@
-cmake_minimum_required(VERSION 3.5)
-
-find_program(CCACHE_PROGRAM ccache)
-if(CCACHE_PROGRAM)
-    set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE "${CCACHE_PROGRAM}")
-endif()
-
-project(gafro_robot_descriptions)
-
-set(${PROJECT_NAME}_VERSION_MAJOR 0)
-set(${PROJECT_NAME}_VERSION_MINOR 0)
-set(${PROJECT_NAME}_VERSION_PATCH 0)
-
-set(${PROJECT_NAME}_VERSION "${${PROJECT_NAME}_VERSION_MAJOR}.${${PROJECT_NAME}_VERSION_MINOR}.${${PROJECT_NAME}_VERSION_PATCH}")
-
-set(CMAKE_CXX_STANDARD 20)
-set(CMAKE_CXX_STANDARD_REQUIRED TRUE)
-
-set(CMAKE_POSITION_INDEPENDENT_CODE ON)
-set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
-
-list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")
-
-set(${PROJECT_NAME}_PREFIX_PACKAGE share/${PROJECT_NAME}/cmake)
-set(${PROJECT_NAME}_PREFIX_INCLUDE include/${PROJECT_NAME})
-
-if(CMAKE_PROJECT_NAME STREQUAL PROJECT_NAME)
-    set(GAFRO_ROBOT_DESCRIPTIONS_DIRECTORY "${CMAKE_INSTALL_PREFIX}/share/${CMAKE_PROJECT_NAME}/assets/")
-else()
-    set(GAFRO_ROBOT_DESCRIPTIONS_DIRECTORY "${CMAKE_BINARY_DIR}/assets/")
-    file(COPY "assets/" DESTINATION "${GAFRO_ROBOT_DESCRIPTIONS_DIRECTORY}")
-endif()
-
-# Check if yaml-cpp was imported by a project higher in the chain
-if(yaml-cpp_POPULATED)
-    set(gafro_USE_YAML_CPP 1)
-    set(YAML_CPP_INCLUDE_DIRS "${CMAKE_BINARY_DIR}/_deps/yaml-cpp-src/include")
-    set(YAML_CPP_LIBRARIES "yaml-cpp")
-else()
-    find_package(yaml-cpp)
-
-    # If yaml-cpp is installed in /usr/local/ (on either Linux or macOS), it is found but informations are missing
-    set(gafro_USE_YAML_CPP ${yaml-cpp_FOUND})
-    if (gafro_USE_YAML_CPP)
-        string(FIND ${yaml-cpp_DIR} "/usr/local/" FOUND)
-        if (FOUND EQUAL 0)
-            set(YAML_CPP_INCLUDE_DIRS "/usr/local/include")
-            set(YAML_CPP_LIBRARIES "yaml-cpp")
-        endif()
-    endif()
-endif()
-
-add_subdirectory(src/${PROJECT_NAME})
-# add_subdirectory(tests)
-
-include(CMakePackageConfigHelpers)
-
-configure_package_config_file(
-    cmake/gafro_robot_descriptions-config.cmake
-    "${PROJECT_BINARY_DIR}/gafro_robot_descriptions-config.cmake"
-    INSTALL_DESTINATION "${CMAKE_CURRENT_BINARY_DIR}/"
-)
-
-write_basic_package_version_file(
-  "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config-version.cmake"
-  VERSION ${${PROJECT_NAME}_VERSION}
-  COMPATIBILITY AnyNewerVersion
-)
-
-configure_file(cmake/${PROJECT_NAME}-packages.cmake "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-packages.cmake")
-
-install(TARGETS ${PROJECT_NAME} EXPORT ${PROJECT_NAME}-config-targets
-    LIBRARY DESTINATION lib/${PROJECT_NAME}/
-    ARCHIVE DESTINATION lib/${PROJECT_NAME}/
-    RUNTIME DESTINATION lib/${PROJECT_NAME}/
-    INCLUDES DESTINATION ${${PROJECT_NAME}_PREFIX_INCLUDE}
-)
-
-install(
-    FILES
-        "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config.cmake"
-        "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config-version.cmake"
-        "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-packages.cmake"
-    DESTINATION
-        ${${PROJECT_NAME}_PREFIX_PACKAGE}
-)
-
-install(EXPORT ${PROJECT_NAME}-config-targets
-    FILE ${PROJECT_NAME}-config-targets.cmake
-    NAMESPACE gafro_robot_descriptions::
-    DESTINATION ${${PROJECT_NAME}_PREFIX_PACKAGE}
-)
-
-install(
-    DIRECTORY
-        "${CMAKE_CURRENT_LIST_DIR}/assets/"
-    DESTINATION
-        "share/${CMAKE_PROJECT_NAME}/assets/"
-)
-
-export(PACKAGE gafro_robot_descriptions)
\ No newline at end of file
