# SPDX-FileCopyrightText: Copyright Â© 2024 Idiap Research Institute <contact@idiap.ch>
#
# SPDX-FileContributor: Philip Abbet <philip.abbet@idiap.ch>
#
# SPDX-License-Identifier: MPL-2.0


name: Publish
run-name: Publish package on PyPI

on:
  push:
    branches:
      - "*"

# on:
#   release:
#     types: [published]

jobs:
  # publish-source-on-pypi:
  #   name: Publish source package on PyPI

  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       submodules: 'true'

  #   - name: Install the Python dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install twine build

  #   - name: Build the source package
  #     run: python3 -m build --sdist

  #   - name: Upload to PyPI
  #     run: twine upload dist/pygafro-*.tar.gz
  #     env:
  #       TWINE_USERNAME: __token__
  #       TWINE_PASSWORD: ${{ secrets.PYPI_API_KEY }}

  publish-wheels-on-pypi:
    name: Publish ${{ matrix.os }} wheels on PyPI

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm, macos-13, macos-15]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==3.0.1

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Display wheels
        run: ls -l ./wheelhouse/*.whl

  # publish-wheels-on-pypi:
  #   name: Publish ${{ matrix.os }} wheels on PyPI

  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
  #       os: [ubuntu-latest, macos-latest]

  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       submodules: 'true'
  #   - uses: actions/setup-python@v5
  #     with:
  #       python-version: ${{ matrix.python }}
        
  #   - name: Install the Python dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install twine build

  #   - name: Build the package
  #     run: |
  #       export CC=/usr/bin/clang
  #       export CXX=/usr/bin/clang++
  #       python3 -m build

  #   - name: Upload to PyPI
  #     run: twine upload dist/pygafro-*.whl
  #     env:
  #       TWINE_USERNAME: __token__
  #       TWINE_PASSWORD: ${{ secrets.PYPI_API_KEY }}
